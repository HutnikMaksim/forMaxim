package by.it.hutnik.jd00_01_my_tests.JavaLessonsYoutube;

public class Less_30_Prividenie {
    public static void main(String[] args) {
        byte b = 120;
        int i = 323234;
        long l = 4242334211L;
        float f = 21342.32F;
        double d = 32231232342.424123;
        // f = d; ошибка приведения float в double
        f = (float) d;
        System.out.println(f);
        // i = l; ошибка приведения int в long
        i = (int) l; /* т.к. l гораздо больше int, то при приведении оно (достигнув максимального
                        значения для int == 2147483647) принимает его минимальное значение и снова увеличивается
                        на недостающее значение. В нашем примере i = 4242334211L - 2147483647 -> 2094850564
                        далее к минимальному значению int (-2147483648) прибавляем 2094850564 и получаем -52633085 */
        System.out.println(i);
        i = b; /* здесь неявное приведение byte в int, т.е. машина сама приводит к этому типу, т.к. тип int
                  больше типа byte и может спокойно разместить в себе любое число из типа byte*/
        /* Если тип приводится машиной автоматически это считается неявным приведением, если надо указывать машине,
        то явным */
    }
}
